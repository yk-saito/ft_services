; Start a new pool named 'www'.
; the variable $pool can be used in any directive and will be replaced by the
; pool name ('www' here)
[www]

; Per pool prefix
; It only applies on the following directives:
; - 'access.log'
; - 'slowlog'
; - 'listen' (unixsocket)
; - 'chroot'
; - 'chdir'
; - 'php_values'
; - 'php_admin_values'
; When not set, the global prefix (or /usr) applies instead.
; Note: This directive can also be relative to the global prefix.
; Default Value: none
;prefix = /path/to/pools/$pool

; Unix user/group of processes
; Note: The user is mandatory. If the group is not set, the default user's group
;       will be used.
user = nobody
group = nobody

; The address on which to accept FastCGI requests.
; Valid syntaxes are:
;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on
;                            a specific port;
;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on
;                            a specific port;
;   'port'                 - to listen on a TCP socket to all addresses
;                            (IPv6 and IPv4-mapped) on a specific port;
;   '/path/to/unix/socket' - to listen on a unix socket.                            
; Note: This value is mandatory.                                                    
listen = /run/php/php7.3-fpm.sock                                                   
                                                                                    
; Set listen(2) backlog.                                                            
; Default Value: 511 (-1 on FreeBSD and OpenBSD)                                    
;listen.backlog = 511                                                               
                                                                                    
; Set permissions for unix socket, if one is used. In Linux, read/write             
; permissions must be set in order to allow connections from a web server. Many     
; BSD-derived systems allow connections regardless of permissions. The owner        
; and group can be specified either by name or by their numeric IDs.                
; Default Values: user and group are set as the running user                        
;                 mode is set to 0660                                               
listen.owner = nginx                                                                
listen.group = nginx                                                                
;listen.mode = 0660                                                                 
; When POSIX Access Control Lists are supported you can set them using              
; these options, value is a comma separated list of user/group names.               
; When set, listen.owner and listen.group are ignored                               
;listen.acl_users =                                                                 
;listen.acl_groups =                                                                
                                                                                    
; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.    
; Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original      
; PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address     
; must be separated by a comma. If this value is left blank, connections will be    
; accepted from any ip address.                                                     
; Default Value: any                                                                
;listen.allowed_clients = 127.0.0.1                                             
                                                                                
; Specify the nice(2) priority to apply to the pool processes (only if set)
; The value can vary from -19 (highest priority) to 20 (lower priority)             
; Note: - It will only work if the FPM master process is launched as root           
;       - The pool processes will inherit the master process priority               
;         unless it specified otherwise                                             
; Default Value: no set                                                             
; process.priority = -19                                                            
                                                                                    
; Set the process dumpable flag (PR_SET_DUMPABLE prctl) even if the process user    
; or group is differrent than the master process user. It allows to create process  
; core dump and ptrace the process for the pool user.                               
; Default Value: no                                                                 
; process.dumpable = yes                                                            
                                                                                    
; Choose how the process manager will control the number of child processes.        
; Possible Values:                                                                  
;   static  - a fixed number (pm.max_children) of child processes;                  
;   dynamic - the number of child processes are set dynamically based on the        
;             following directives. With this process management, there will be     
;             always at least 1 children.                                           
;             pm.max_children      - the maximum number of children that can        
;                                    be alive at the same time.                     
;             pm.start_servers     - the number of children created on startup.     
;             pm.min_spare_servers - the minimum number of children in 'idle'       
;                                    state (waiting to process). If the number      
;                                    of 'idle' processes is less than this          
;                                    number then some children will be created.     
;             pm.max_spare_servers - the maximum number of children in 'idle'       
;                                    state (waiting to process). If the number      
;                                    of 'idle' processes is greater than this       
;                                    number then some children will be killed.    
;  ondemand - no children are created at startup. Children will be forked when    
;             new requests will connect. The following parameter are used:
;             pm.max_children           - the maximum number of children that       
;                                         can be alive at the same time.            
;             pm.process_idle_timeout   - The number of seconds after which         
;                                         an idle process will be killed.           
; Note: This value is mandatory.                                                    
pm = dynamic                                                                        
                                                                                    
; The number of child processes to be created when pm is set to 'static' and the    
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.      
; This value sets the limit on the number of simultaneous requests that will be     
; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.            
; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP      
; CGI. The below defaults are based on a server without much resources. Don't       
; forget to tweak pm.* to fit your needs.                                           
; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'                    
; Note: This value is mandatory.                                                    
pm.max_children = 5                                                                 
                                                                                    
; The number of child processes created on startup.                                 
; Note: Used only when pm is set to 'dynamic'                                       
; Default Value: (min_spare_servers + max_spare_servers) / 2                        
pm.start_servers = 2                                                                
                                                                                    
; The desired minimum number of idle server processes.                              
; Note: Used only when pm is set to 'dynamic'                                       
; Note: Mandatory when pm is set to 'dynamic'                                       
pm.min_spare_servers = 1                                                            
                                                                                    
; The desired maximum number of idle server processes.                              
; Note: Used only when pm is set to 'dynamic'                                       
; Note: Mandatory when pm is set to 'dynamic'                                     
pm.max_spare_servers = 3                                                          
             ; The number of seconds after which an idle process will be killed.                 
; Note: Used only when pm is set to 'ondemand'                                      
; Default Value: 10s                                                                
;pm.process_idle_timeout = 10s;                                                     
                                                                                    
; The number of requests each child process should execute before respawning.       
; This can be useful to work around memory leaks in 3rd party libraries. For        
; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.      
; Default Value: 0                                                                  
;pm.max_requests = 500                                                              
                                                                                    
; The URI to view the FPM status page. If this value is not set, no URI will be     
; recognized as a status page. It shows the following informations:                 
;   pool                 - the name of the pool;                                    
;   process manager      - static, dynamic or ondemand;                             
;   start time           - the date and time FPM has started;                       
;   start since          - number of seconds since FPM has started;                 
;   accepted conn        - the number of request accepted by the pool;              
;   listen queue         - the number of request in the queue of pending            
;                          connections (see backlog in listen(2));                  
;   max listen queue     - the maximum number of requests in the queue              
;                          of pending connections since FPM has started;            
;   listen queue len     - the size of the socket queue of pending connections;     
;   idle processes       - the number of idle processes;                            
;   active processes     - the number of active processes;                          
;   total processes      - the number of idle + active processes;                   
;   max active processes - the maximum number of active processes since FPM         
;                          has started;                                             
;   max children reached - number of times, the process limit has been reached,     
;                          when pm tries to start more children (works only for     
;                          pm 'dynamic' and 'ondemand');                          
; Value are updated in real time.                                                 
; Example output:                                                 